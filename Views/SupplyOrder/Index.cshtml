@model IEnumerable<Inventory_Management_System.Models.SupplyOrder>

@{
    ViewData["Title"] = "Supply Orders";
}

<h2>Supply Orders</h2>

<p>
    <div>
        <a asp-action="Create" class="btn btn-primary">Add New Supply Order</a>
        <a asp-action="Index" asp-controller="Home" class="btn btn-secondary ms-2">Back to Home</a>
    </div>
</p>

@if (!Model.Any())
{
    <div class="alert alert-info">
        No supply orders found.
    </div>
}
else
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Order Number</th>
                <th>Order Date</th>
                <th>Warehouse</th>
                <th>Supplier</th>
                <th>Items Count</th>
                <th>Total Quantity</th>
                <th>Production Date</th>
                <th>Expiry Status</th>
                <th>Created At</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Model)
            {
                <tr>
                    <td><strong>@order.Id</strong></td>
                    <td><strong>@order.OrderNumber</strong></td>
                    <td>@order.OrderDate.ToShortDateString()</td>
                    <td><span class="badge badge-info">@order.Warehouse?.Name</span></td>
                    <td><span class="badge badge-secondary">@order.Supplier?.Name</span></td>
                    <td><span class="badge badge-primary">@order.Items?.Count()</span></td>
                    <td><span class="badge badge-success">@order.Items?.Sum(i => i.Quantity)</span></td>
                    <td>
                        @if (order.Items?.Any() == true)
                        {
                            var earliestProduction = order.Items.Min(i => i.ProductionDate);
                            @earliestProduction.ToShortDateString()
                            @if (order.Items.Count() > 1)
                            {
                                <br />
                                <small class="text-muted">(+ @(order.Items.Count() - 1) more)</small>
                            }
                        }
                        else
                        {
                            <span class="text-muted">N/A</span>
                        }
                    </td>
                    <td>
                        @if (order.Items?.Any() == true)
                        {
                            var expired = 0;
                            var critical = 0;
                            var warning = 0;
                            var good = 0;

                            foreach (var item in order.Items)
                            {
                                var expiry = item.ProductionDate.AddDays(item.ExpiryPeriodInDays);
                                var days = (expiry - DateTime.Today).Days;

                                if (days < 0) expired++;
                                else if (days < 7) critical++;
                                else if (days < 30) warning++;
                                else good++;
                            }

                            if (expired > 0)
                            {
                                <span class="badge badge-danger">@expired Expired</span>
                            }
                            if (critical > 0)
                            {
                                <span class="badge badge-warning">@critical Critical</span>
                            }
                            if (warning > 0)
                            {
                                <span class="badge badge-warning">@warning Warning</span>
                            }
                            if (good > 0)
                            {
                                <span class="badge badge-success">@good Good</span>
                            }
                        }
                        else
                        {
                            <span class="text-muted">N/A</span>
                        }
                    </td>
                    <td>@order.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                </tr>
            }
        </tbody>
    </table>
}

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete supply order <strong id="orderToDelete"></strong>?</p>
                <p class="text-danger"><small>This action cannot be undone.</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Delete confirmation
        function confirmDelete(orderId, orderNumber) {
            document.getElementById('orderToDelete').textContent = orderNumber;
            document.getElementById('deleteForm').action = '@Url.Action("Delete")/' + orderId;
            $('#deleteModal').modal('show');
        }
    </script>
}
