@model Inventory_Management_System.ViewModels.AddSupplyOrderViewModel

@{
    ViewData["Title"] = "Create Supply Order";
}

<h2>Create Supply Order</h2>

<!-- Validation summary -->
<div asp-validation-summary="All" class="text-danger"></div>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="OrderNumber"></label>
        <div class="input-group">
            <input asp-for="OrderNumber" class="form-control" id="orderNumberInput" />
        </div>
        <span asp-validation-for="OrderNumber" class="text-danger"></span>
        <div id="orderNumberStatus" class="mt-1"></div>
        <small class="form-text text-muted">Order number will be auto-generated if left empty</small>
    </div>

    <div class="form-group">
        <label asp-for="OrderDate"></label>
        <input asp-for="OrderDate" class="form-control" type="date" />
        <span asp-validation-for="OrderDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="WarehouseId"></label>
        <select asp-for="WarehouseId" asp-items="@(new SelectList(Model.Warehouses, "Id", "Name"))" class="form-control">
            <option value="">-- Select Warehouse --</option>
        </select>
        <span asp-validation-for="WarehouseId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="SupplierId"></label>
        <select asp-for="SupplierId" asp-items="@(new SelectList(Model.Suppliers, "Id", "Name"))" class="form-control">
            <option value="">-- Select Supplier --</option>
        </select>
        <span asp-validation-for="SupplierId" class="text-danger"></span>
    </div>

    <h4>Items</h4>
    <table class="table" id="items-table">
        <thead>
            <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Production Date</th>
                <th>Expiry (Days)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Items.Count; i++)
            {
                <tr>
                    <td>
                        <select asp-for="@Model.Items[i].ProductId" asp-items="@(new SelectList(Model.Products, "Id", "Name"))" class="form-control">
                            <option value="">-- Select --</option>
                        </select>
                        <span asp-validation-for="@Model.Items[i].ProductId" class="text-danger"></span>
                    </td>
                    <td>
                        <input asp-for="@Model.Items[i].Quantity" class="form-control" />
                        <span asp-validation-for="@Model.Items[i].Quantity" class="text-danger"></span>
                    </td>
                    <td>
                        <input asp-for="@Model.Items[i].ProductionDate" class="form-control" type="date" />
                        <span asp-validation-for="@Model.Items[i].ProductionDate" class="text-danger"></span>
                    </td>
                    <td>
                        <input asp-for="@Model.Items[i].ExpiryPeriodInDays" class="form-control" />
                        <span asp-validation-for="@Model.Items[i].ExpiryPeriodInDays" class="text-danger"></span>
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger" onclick="removeRow(this)">Remove</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <br /><br />

    <div>
        <button type="submit" class="btn btn-primary">Save</button>
        <a asp-action="Index" asp-controller="SupplyOrder" class="btn btn-secondary ms-2">Back to Home</a>
    </div>

    <br />
</form>

<style>
    select[name*="ProductId"],
    select[name="WarehouseId"],
    select[name="SupplierId"] {
        background-color: #7c79d4 !important;
    }

    .order-number-valid {
        color: #28a745;
        font-size: .875em;
    }

    .order-number-invalid {
        color: #dc3545;
        font-size: .875em;
    }

    .order-number-suggestion {
        color: #007bff;
        font-size: .875em;
        cursor: pointer;
        text-decoration: underline;
    }
</style>

<script>
    var productList = @Html.Raw(Json.Serialize(Model.Products));
    var checkTimeout;

    function checkOrderNumber(orderNumber) {
        if (!orderNumber || orderNumber.trim() === '') {
            document.getElementById('orderNumberStatus').innerHTML = '';
            return;
        }

        clearTimeout(checkTimeout);
        checkTimeout = setTimeout(function () {
            fetch('@Url.Action("CheckOrderNumber")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken':
                        document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ orderNumber: orderNumber })
            })
            .then(response => response.json())
            .then(function (data) {
                var statusDiv = document.getElementById('orderNumberStatus');
                if (data.exists) {
                    statusDiv.innerHTML =
                        '<div class="order-number-invalid">' +
                        '<i class="fas fa-times-circle"></i> ' + data.message + '<br>' +
                        '<span class="order-number-suggestion" ' +
                        'onclick="useSuggestion(\\'' + data.suggestion + '\\')">' +
                        'Click here to use: ' + data.suggestion +
                        '</span></div>';
                } else {
                    statusDiv.innerHTML =
                        '<div class="order-number-valid">' +
                        '<i class="fas fa-check-circle"></i> ' + data.message +
                        '</div>';
                }
            })
            .catch(function (error) {
                console.error('Error checking order number:', error);
            });
        }, 500);
    }

    function useSuggestion(suggestion) {
        document.getElementById('orderNumberInput').value = suggestion;
        checkOrderNumber(suggestion);
    }

    document.getElementById('orderNumberInput')
            .addEventListener('input', function () { checkOrderNumber(this.value); });

    document.addEventListener('DOMContentLoaded', function () {
        var initialOrderNumber = document.getElementById('orderNumberInput').value;
        if (initialOrderNumber) checkOrderNumber(initialOrderNumber);
    });

    function addRow() {
        var index = document.querySelectorAll('#items-table tbody tr').length;
        var row =
            '<tr>' +
            '<td><select name="Items[' + index + '].ProductId" class="form-control">' +
            '<option value="">-- Select --</option>' +
            productList.map(function (p) {
                return '<option value="' + p.Id + '">' + p.Name + '</option>';
            }).join('') +
            '</select></td>' +
            '<td><input name="Items[' + index + '].Quantity" class="form-control" /></td>' +
            '<td><input name="Items[' + index + '].ProductionDate" class="form-control" type="date" /></td>' +
            '<td><input name="Items[' + index + '].ExpiryPeriodInDays" class="form-control" /></td>' +
            '<td><button type="button" class="btn btn-danger" onclick="removeRow(this)">Remove</button></td>' +
            '</tr>';

        document.querySelector('#items-table tbody')
                .insertAdjacentHTML('beforeend', row);
    }

    function removeRow(button) {
        var tbody = button.closest('tbody');
        button.closest('tr').remove();

        Array.from(tbody.querySelectorAll('tr')).forEach(function (row, idx) {
            Array.from(row.querySelectorAll('select, input')).forEach(function (el) {
                if (el.name)
                    el.name = el.name.replace(/\[\d+\]/, '[' + idx + ']');
            });
        });
    }

    document.querySelector('form')
            .addEventListener('submit', function () {
                console.log('Form submitting...', new FormData(this));
            });
</script>
